---

###################################################################################
# Creates the in vars/main.yml defined oracle group if not existing.
# Tag: rdbms, prepare
###################################################################################

- name: Check if dba Group exsists
  become: yes
  getent:
    database: group
    key: "{{ oracle_group }}"
    fail_key: no
  register: group_exists
  tags:
    - rdbms
    - prepare
    - client

- name: Create dba Group
  group:
    name: "{{ oracle_group }}"
    gid: "{{ oracle_gid }}"
    state: present
  become: yes
  when: group_exists.msg is defined
  tags:
    - rdbms
    - prepare
    - client

###################################################################################
# Creates the in vars/main.yml defined oracle user if not existing. Sets User
# password and shows a message if the password has been set. The password is only
# set when the user is not existent.
# Tag: rdbms, prepare, client
###################################################################################

- name: Check if {{ oracle_user }} User exsists
  become: yes
  getent:
    database: passwd
    key: "{{ oracle_user }}"
    fail_key: no
  register: user_exists
  tags:
    - rdbms
    - prepare
    - client

- name: Create oracle User
  user:
    name: "{{ oracle_user }}"
    shell: /bin/bash
    home: "{{ oracle_home_dir }}"
    uid: "{{ oracle_uid }}"
    group: "{{ oracle_group }}"
    password: "{{ oracle_user_password | password_hash('sha512') }}"
    create_home: yes
    update_password: on_create
  register: user_created
  become: yes
  when: user_exists.msg is defined
  tags:
    - rdbms
    - prepare
    - client

- name: New oracle User Password
  debug:
    msg: "User {{ oracle_user }} has been created with password {{ oracle_user_password }}"
  when: user_created.changed
  tags:
    - rdbms
    - prepare
    - client

###################################################################################
# Creates needed Directories for Oracle Installation (RDBMS).
# Includes oracle_base, oracle_home, oracle_inventory
# Tag: rdbms
###################################################################################

- name: Create Oracle Home Directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0755
  become: yes
  when: 'item != ""'
  with_items:
    - "{{ rdbms[oracle_version|string].oracle_base }}"
    - "{{ rdbms[oracle_version|string].oracle_home }}"
    - "{{ rdbms[oracle_version|string].oracle_inventory }}"
    - "{{ rdbms[oracle_version|string].additional_dir | default(omit)}}"
  tags:
    - rdbms

###################################################################################
# Creates needed Directories for Oracle Installation (Client).
# Includes oracle_base, oracle_home, oracle_inventory
# Tag: client
###################################################################################

- name: Create Oracle Home Directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0755
  become: yes
  with_items:
    - "{{ client[client_version|string].oracle_base }}"
    - "{{ client[client_version|string].oracle_home }}"
    - "{{ client[client_version|string].oracle_inventory }}"
  tags:
    - client

###################################################################################
# Creates needed Directories for Staging Patches, RDBMS and Scripts.
# Tag: rdbms, db, sqlscript, patch, patchonly, rpm, client
###################################################################################
- name: Create Oracle Stage Directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0777
  become: yes
  with_items:
    - "{{ remote_stage_directory }}"
    - "{{ remote_sql_stage_directory }}"
  tags:
    - rdbms
    - patch
    - patchonly
    - sqlscript
    - rpm
    - client
    - duplicate

###################################################################################
# Installing all Prerequired OS Packages for the Oracle Installation. Dependant
# on the OS Version and Distribution in separated yml files.
# Tag: rdbms
###################################################################################

- name: Install prerequisite Packages for Oracle Database
  include_tasks: prereq_packages_{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml
  tags:
    - rdbms
    - prepare
    - client

###################################################################################
# Setup Required Kernel / OS Parameters, such as sysctl and limits. Calculates
# Shared Memory and Hugepages, implement the calculated values. Also Transparent
# Hugepages are disabled when used on the Target Server.
# Tag: rdbms, db, hugepage, converttohugepage, prepare
###################################################################################

- name: Check if sysctl Configuration exists
  stat:
    path: /etc/sysctl.d/97-oracle-db-sysctl.conf
  register: sysctl_exists
  tags:
    - db
    - rdbms
    - prepare
    - hugepage
    - converttohugepage

- name: Check if sysctl Configuration is stable
  lineinfile:
    name: /etc/sysctl.d/97-oracle-db-sysctl.conf
    line: "###stable###"
    state: present
  become: yes
  register: sysctl_status
  check_mode: yes
  when: (sysctl_exists.stat.exists | bool) and (sysctl_exists.stat.exists is defined)
  tags:
    - db
    - rdbms
    - prepare
    - hugepage
    - converttohugepage

- name: Sysctl Configuration is unstable
  set_fact:
    sysctl_stable: false
  when: (sysctl_status.changed | bool) and (sysctl_status.changed is defined)
  tags:
    - db
    - rdbms
    - prepare
    - hugepage
    - converttohugepage

- name: Check if Transparent Hugepages are configured
  shell: grep -w transparent_hugepage=never /etc/default/grub
  become: yes
  register: transparent_hugepages
  failed_when: ("ERROR" in transparent_hugepages.stdout) or ("FATAL" in transparent_hugepages.stdout)
  tags:
    - hugepage
    - converttohugepage

- name: Getting current Hugepage Value
  become: yes
  shell: "sysctl -a | grep -w vm.nr_hugepages | grep -o [0-9]*"
  register: current_hugepages
  when: (sysctl_stable | bool)
  tags:
    - hugepage

- name: Getting current shmall Value
  become: yes
  shell: "cat /etc/sysctl.d/97-oracle-db-sysctl.conf | grep shmall | awk -F \"=\" {'print$2'}"
  register: current_shmall
  when: (sysctl_stable | bool)
  tags:
    - db
    - prepare

- name: Getting current shmmax Value
  become: yes
  shell: "cat /etc/sysctl.d/97-oracle-db-sysctl.conf | grep shmmax | awk -F \"=\" {'print$2'}"
  register: current_shmmax
  when: (sysctl_stable | bool)
  tags:
    - db
    - prepare

- name: Check for enough available Memory for Database {{ oracle_sid }}
  assert:
    that: ansible_memory_mb.real.total > ({{ sga_max_size }}* 1024 + 2048)
    fail_msg: "There should be at least {{ sga_max_size|int + 2 }} GB of System Memory for creating Database {{ oracle_sid }}"
    success_msg: There is sufficient Memory available for Database {{ oracle_sid }}
  become: yes
  tags:
    - db
    - prepare

# Only when sysctl is stable
- name: Calculating OS Kernel Parameter Settings shmall
  set_fact:
    shmall: "{{ (((sga_max_size|int * 1024 * 1024 * 1024 / 4096) * 1.01) + current_shmall.stdout|int)|int }}"
  when: ((sysctl_stable | bool) and (shmall|int < ((sga_max_size|int * 1024 * 1024 * 1024 / 4096) * 1.01) + current_shmall.stdout|int))
  tags:
    - db
    - prepare

- name: Calculating OS Kernel Parameter Settings shmall
  set_fact:
    shmall: "{{ (((sga_max_size|int * 1024 * 1024 * 1024 / 4096) * 1.01))|int }}"
  when: ((sysctl_stable | bool) and (shmall|int < (sga_max_size|int * 1024 * 1024 * 1024 / 4096) * 1.01))
  tags:
    - converttohugepage

- name: Calculating OS Kernel Parameter Settings shmmax
  set_fact:
    shmmax: "{{ (((sga_max_size|int * 1024 * 1024 * 1024) * 1.01) + current_shmmax.stdout|int)|int }}"
  when: ((sysctl_stable | bool) and (shmmax|int < ((sga_max_size|int * 1024 * 1024 * 1024) * 1.01) + current_shmmax.stdout|int))
  tags:
    - db
    - prepare

- name: Calculating OS Kernel Parameter Settings shmmax
  set_fact:
    shmmax: "{{ (((sga_max_size|int * 1024 * 1024 * 1024) * 1.01))|int }}"
  when: ((sysctl_stable | bool) and (shmmax|int < (sga_max_size|int * 1024 * 1024 * 1024) * 1.01))
  tags:
    - converttohugepage

- name: Calculating Number of Hugepages
  set_fact:
    hugepages: "{{ (((sga_max_size|int * 1024 / 2) * 1.01) + current_hugepages.stdout|int)|int }}"
    reboot_required: true
  when: (sysctl_stable | bool)
  tags:
    - hugepage

- name: Calculating Number of Hugepages
  set_fact:
    hugepages: "{{ (((sga_max_size|int * 1024 / 2) * 1.01))|int }}"
    reboot_required: true
  when: (sysctl_stable | bool)
  tags:
    - converttohugepage

- name: Setup Kernel Parameters
  template:
    src: roles/pythia/templates/97-oracle-db-sysctl.conf
    dest: /etc/sysctl.d/97-oracle-db-sysctl.conf
    owner: root
    group: root
    mode: 0644
    force: yes
  become: yes
  when: (sysctl_stable | bool) or (not sysctl_exists.stat.exists | bool)
  tags:
    - db
    - prepare
    - hugepage
    - converttohugepage

- name: Setup Kernel Parameters
  template:
    src: roles/pythia/templates/97-oracle-db-sysctl.conf
    dest: /etc/sysctl.d/97-oracle-db-sysctl.conf
    owner: root
    group: root
    mode: 0644
    force: no
  become: yes
  when: (sysctl_stable | bool) or (not sysctl_exists.stat.exists | bool)
  tags:
    - rdbms

- name: Setup special SLES Kernel Parameters
  sysctl:
    name: vm.hugetlb_shm_group
    value: "{{ oracle_gid }}"
    sysctl_file: /etc/sysctl.d/97-oracle-db-sysctl.conf
    reload: no
  when: ansible_distribution == 'SLES'
  become: yes
  tags:
    - rdbms
    - db
    - prepare

- name: Clean sysctl.conf from duplicate Settings
  sysctl:
    name: "{{ item }}"
    state: absent
    sysctl_file: /etc/sysctl.conf
    reload: no
  with_items:
    - "fs.file-max"
    - "kernel.shmmax"
    - "kernel.shmall"
    - "vm.nr_hugepages"
  become: yes
  tags:
    - rdbms
    - db
    - prepare
    - converttohugepage

- name: Marking sysctl Configuration as unstable
  lineinfile:
    name: /etc/sysctl.d/97-oracle-db-sysctl.conf
    line: "###unstable###"
    state: present
  become: yes
  when: (sysctl_stable | bool) and (sysctl_status.changed | bool)
  tags:
    - db
    - prepare
    - hugepage
    - converttohugepage

- name: Marking sysctl Configuration as unstable
  replace:
    path: /etc/sysctl.d/97-oracle-db-sysctl.conf
    regexp: "###stable###"
    replace: "###unstable###"
  become: yes
  when: (sysctl_stable | bool) and (not sysctl_status.changed | bool)
  tags:
    - db
    - prepare
    - hugepage
    - converttohugepage

- name: Make Kernel Parameters active
  command:
    cmd: sysctl --system
  become: yes
  tags:
    - rdbms
    - db
    - prepare
    - converttohugepage

- name: Setting Security Limits
  template:
    src: roles/pythia/templates/97-oracle-db-limits.conf
    dest: "/etc/security/limits.d/97-oracle-db-limits.conf"
    owner: root
    group: root
    mode: 0644
    force: no
  become: yes
  tags:
    - rdbms
    - prepare
    - db

- name: Check if needed Reboot is acknowledged for Hugepage Configuration
  fail:
    msg: "Configuration of Hugepages needs a Reboot. But you don't have acknowledged this by setting reboot_ack=TRUE"
  when: ((not reboot_ack | bool) and (reboot_required | bool))
  tags:
    - hugepage
    - converttohugepage

- name: Disable Transparent Hugepages on RHEL
  become: yes
  lineinfile:
    state: present
    dest: /etc/default/grub
    backrefs: yes
    regexp: '^(GRUB_CMDLINE_LINUX=(?!.* transparent_hugepage)\"[^\"]+)(\".*)'
    line: '\1 transparent_hugepage=never\2'
  when: transparent_hugepages.stdout|length == 0 and ansible_distribution != 'SLES'
  tags:
    - hugepage
    - converttohugepage

- name: Disable Transparent Hugepages on SLES
  become: yes
  lineinfile:
    state: present
    dest: /etc/default/grub
    backrefs: yes
    regexp: '^(GRUB_CMDLINE_LINUX_DEFAULT=(?!.* transparent_hugepage)\"[^\"]+)(\".*)'
    line: '\1 transparent_hugepage=never\2'
  when: transparent_hugepages.stdout|length == 0 and ansible_distribution == 'SLES'
  tags:
    - hugepage
    - converttohugepage

- name: Build new Grub Config
  become: yes
  command:
    cmd: grub2-mkconfig -o /boot/grub2/grub.cfg
  when: transparent_hugepages.stdout|length == 0
  tags:
    - hugepage
    - converttohugepage

- name: Reboot
  become: yes
  reboot:
    post_reboot_delay: 120
    msg: Rebooting for Hugepage Configuration
  when: reboot_required | bool
  tags:
    - hugepage
    - converttohugepage

- name: Marking sysctl Configuration as stable
  replace:
    path: /etc/sysctl.d/97-oracle-db-sysctl.conf
    regexp: "###unstable###"
    replace: "###stable###"
  become: yes
  tags:
    - prepare
    - converttohugepage

- name: Setup Environment Skript for {{ oracle_user }} OS User (1/3)
  become: yes
  template:
    src: roles/pythia/templates/ora_set.sh
    dest: "{{ oracle_home_dir }}/ora_set.sh"
    mode: 0750
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    backup: yes
  tags:
    - db
    - prepare

- name: Setup Environment Skript for {{ oracle_user }} OS User (2/3)
  become: yes
  lineinfile:
    path: "{{ oracle_home_dir }}/.bash_profile"
    line: ". ./ora_set.sh"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0644
    create: yes
  tags:
    - db
    - prepare

- name: Setup Environment Skript for {{ oracle_user }} OS User (3/3)
  become: yes
  lineinfile:
    path: "{{ oracle_home_dir }}/.bash_profile"
    line: "umask 027"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0644
    create: yes
  tags:
    - db
    - prepare