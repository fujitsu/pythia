---

# Oracle DB creation Task for Pythia

# ####################################################################
# Before Creation of a new Database we need to check if this Database
# is already # existant.
# TAG: db
# ####################################################################

- name: Check if Oracle SID {{ oracle_sid }} already exists
  shell: "grep -w {{ oracle_sid }} /etc/oratab"
  changed_when: false
  become: true
  register: result
  failed_when: "'ERROR' in result.stderr"
  tags:
    - db

- name: Oracle SID already exists?
  assert:
    that: oracle_sid not in item.stdout
    fail_msg: It seems, that there is already a database running with SID {{ oracle_sid }}
    success_msg: Oracle SID {{ oracle_sid }} not found. Proceed with Installation.
  become: true
  with_items:
    - "{{ result }}"
  tags:
    - db

# ####################################################################
# Start Creation of Database. We create needed Directory Structure and
# create Response Files as configured.
# TAG: db
# ####################################################################

- name: Print Dictionary Information for SID {{ oracle_sid }} and Version {{ oracle_version }}
  debug:
    msg:
      - "{{ rdbms[oracle_version|string] }}"
      - "Oracle SID will be: {{ oracle_sid }}"
      - "The following directories will be created: {{ sid_directory_list }}"
  tags:
    - db

- name: Create DB Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0774
  become: true
  with_items:
    - "{{ sid_directory_list }}"
  tags:
    - db

- name: Configure Response File for Hugepages
  set_fact:
    use_large_pages: "ONLY"
  tags:
    - hugepage

- name: Setup Oracle DB Response File
  become: true
  become_user: "{{ oracle_user }}"
  template:
    src: "{{ role_path }}/templates/{{ oracle_version }}_Database.rsp.j2"
    dest: "{{ rdbms[oracle_version|string].oracle_home }}/assistants/dbca/templates/{{ oracle_version }}_Database.rsp"
    mode: 0755
  tags:
    - db

- name: DBCA Logfile Location
  debug:
    msg: "Location of DBCA Logfiles: {{ rdbms[oracle_version|string].oracle_base }}/cfgtoollogs/dbca/{{ oracle_sid }}/"
  tags:
    - db

- name: Create Database {{ oracle_sid }} with dbca
  become: true
  become_user: "{{ oracle_user }}"
  shell: "{{ rdbms[oracle_version|string].oracle_home }}/bin/dbca -silent -createDatabase -templateName {{ rdbms[oracle_version|string].oracle_home }}/assistants/dbca/templates/{{ oracle_version }}_Database.rsp -sid {{ oracle_sid }} -gdbName {{ oracle_sid }} -createAsContainerDatabase {{ rdbms[oracle_version|string].container_database }} -sysPassword {{ sys_user_password }} -systemPassword {{ system_user_password }} -emConfiguration {{ emexpress }} -ignorePreReqs -honorControlFileInitParam"  # noqa line-length
  changed_when: true
  register: result
  failed_when: ("ERROR" in result.stdout) or ("FATAL" in result.stdout)
  environment:
    ORACLE_HOME: "{{ rdbms[oracle_version|string].oracle_home }}"
    ORACLE_BASE: "{{ rdbms[oracle_version|string].oracle_base }}"
    ORACLE_SID: "{{ oracle_sid }}"
  tags:
    - db

- name: Create plugable Database {{ oracle_pdb_name }} with dbca
  become: true
  become_user: "{{ oracle_user }}"
  shell: "{{ rdbms[oracle_version|string].oracle_home }}/bin/dbca -silent -createPluggableDatabase -pdbName {{ oracle_pdb_name }} -sourceDB {{ oracle_sid }} -configureTDE false -createPDBFrom DEFAULT -pdbAdminUserName pdmadm_{{ oracle_pdb_name }} -pdbAdminPassword {{ sys_user_password }} -pdbDatafileDestination {{ data_dest }}/{{ oracle_pdb_name }}"  # noqa line-length
  register: result
  failed_when: ("ERROR" in result.stdout) or ("FATAL" in result.stdout)
  when: (rdbms[oracle_version|string].container_database|bool) and (oracle_pdb_name|length > 0)
  environment:
    ORACLE_HOME: "{{ rdbms[oracle_version|string].oracle_home }}"
    ORACLE_BASE: "{{ rdbms[oracle_version|string].oracle_base }}"
    ORACLE_SID: "{{ oracle_sid }}"
  tags:
    - db

# ####################################################################
# Reset Database Users Passwords and Print them out to the User
# TAG: db
# ####################################################################

- name: Setting SYS and SYSTEM Password after Creation
  become: true
  become_user: "{{ oracle_user }}"
  # shell: "{{ item }}"
  # changed_when: true
  oracle_sql:
    orahome: "{{ rdbms[oracle_version|string].oracle_home }}"
    sql: "{{ item }}"
  with_items:
    # - "echo -e \"alter user system identified by \"{{ system_user_password }}\";\" | {{ rdbms[oracle_version|string].oracle_home }}/bin/sqlplus -s / as sysdba"
    # - "echo -e \"alter user system identified by \"{{ sys_user_password }}\";\" | {{ rdbms[oracle_version|string].oracle_home }}/bin/sqlplus -s / as sysdba"
    - 'alter user system identified by "{{ system_user_password }}";'
    - 'alter user sys identified by "{{ sys_user_password }}";'
  environment:
    ORACLE_HOME: "{{ rdbms[oracle_version|string].oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
  tags:
    - db

- name: Print SYS and SYSTEM Users Password
  debug:
    msg:
      - "User SYS has been created with password {{ sys_user_password }}"
      - "User SYSTEM has been created with password {{ system_user_password }}"
  tags:
    - db

- name: Gather Default DB Users for setting Password
  become: true
  become_user: "{{ oracle_user }}"
  shell: "echo -e \"set heading off; \\n set pages 500; \\n set feedback off; \\n select username from dba_users where username not in ('SYS', 'SYSTEM', 'ANONYMOUS');\" | {{ rdbms[oracle_version|string].oracle_home }}/bin/sqlplus -s / as sysdba"  # noqa line-length
  changed_when: false
  environment:
    ORACLE_HOME: "{{ rdbms[oracle_version|string].oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
  register: db_user_list
  tags:
    - db

- name: Setting Password for Default DB Users
  become: true
  become_user: "{{ oracle_user }}"
  # shell: "echo -e \"alter user {{ item }} identified by \"{{ default_user_password }}\";\" | {{ rdbms[oracle_version|string].oracle_home }}/bin/sqlplus -s / as sysdba"  # noqa line-length
  oracle_sql:
    orahome: "{{ rdbms[oracle_version|string].oracle_home }}"
    sql: 'alter user {{ item }} identified by "{{ default_user_password }}";'
  environment:
    ORACLE_HOME: "{{ rdbms[oracle_version|string].oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
  when: (db_user_list.stdout_lines|length > 0)
  with_items: "{{ db_user_list.stdout_lines }}"
  tags:
    - db

- name: Print Default DB User Password
  debug:
    msg: "All Default DB Users are created with password {{ default_user_password }}"
  tags:
    - db

# ####################################################################
# Create Listener for created Database or an additional Listener when
# calling with the listener TAG. Before Creating a Listener, we check
# if there is already an existing listener on this Oracle Home.
# If not, the listener.ora and tnsnames.ora will be created completely
# out of the according template. If so, the Configuration Files will
# be appended with the additional Listener Configuration.
# TAG: db, listener
# ####################################################################

- name: Gather Listeners running on Oracle Home {{ rdbms[oracle_version|string].oracle_home }}
  become: true
  become_user: "{{ oracle_user }}"
  shell: "ps -ef | grep {{ rdbms[oracle_version|string].oracle_home }} | grep tnslsnr | grep -v grep | awk {'print$9'}"
  changed_when: false
  register: listener_list
  tags:
    - db
    - listener

- name: Create Listener {{ listener_prefix }}{{ oracle_sid }} on Port {{ listener_port }}
  become: true
  become_user: "{{ oracle_user }}"
  template:
    src: "{{ role_path }}/templates/{{ oracle_version }}_listener.ora"
    dest: "{{ rdbms[oracle_version|string].oracle_home }}/network/admin/listener.ora"
    mode: 0755
    backup: true
  when: (listener_list.stdout_lines|length == 0)
  tags:
    - db
    - listener

- name: Create Listener {{ listener_prefix }}{{ oracle_sid }} on Port {{ listener_port }}  # noqa no-jinja-nesting
  become: true
  become_user: "{{ oracle_user }}"
  blockinfile:
    dest: "{{ rdbms[oracle_version|string].oracle_home }}/network/admin/listener.ora"
    block: "{{ lookup('template', '{{ role_path }}/templates/{{ oracle_version }}_listener.ora') }}"
    backup: true
  when: (listener_list.stdout_lines|length > 0)
  register: listener_backup
  tags:
    - db
    - listener

- name: Create tnsnames.ora
  become: true
  become_user: "{{ oracle_user }}"
  template:
    src: "{{ role_path }}/templates/tnsnames.ora"
    dest: "{{ rdbms[oracle_version|string].oracle_home }}/network/admin/tnsnames.ora"
    mode: 0755
    backup: true
  when: (listener_list.stdout_lines|length == 0)
  tags:
    - db
    - listener

- name: Create tnsnames.ora
  become: true
  become_user: "{{ oracle_user }}"
  blockinfile:
    dest: "{{ rdbms[oracle_version|string].oracle_home }}/network/admin/tnsnames.ora"
    block: "{{ lookup('template', '{{ role_path }}/templates/tnsnames.ora') }}"
    backup: true
  when: (listener_list.stdout_lines|length > 0)
  register: tnsnames_backup
  tags:
    - db
    - listener

- name: Start Listener {{ listener_prefix }}{{ oracle_sid }}
  become: true
  become_user: "{{ oracle_user }}"
  shell: "{{ rdbms[oracle_version|string].oracle_home }}/bin/lsnrctl start {{ listener_prefix }}{{ oracle_sid }}"
  changed_when: result.rc == 0
  register: result
  environment:
    ORACLE_HOME: "{{ rdbms[oracle_version|string].oracle_home }}"
    ORACLE_BASE: "{{ rdbms[oracle_version|string].oracle_base }}"
    ORACLE_SID: "{{ oracle_sid }}"
  tags:
    - db
    - listener

# ####################################################################
# The Revertion of the Listener and TNSNames Configuration is not
# possible at the moment because of Ansible Bug #27626. The Backup
# Filenames is not registered in the Variable.
# TAG: listener
# ####################################################################

# - name: Revert Listener Configuration
#   become: true
#   become_user: "{{ oracle_user }}"
#   when: result.
#   tags:
#     - listener

- name: Marking sysctl Configuration as stable
  replace:
    path: /etc/sysctl.d/97-oracle-db-sysctl.conf
    regexp: "###unstable###"
    replace: "###stable###"
  become: true
  tags:
    - db
